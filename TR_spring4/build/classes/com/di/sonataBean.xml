<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 
	xml문서에 클래스 정보를 등록하면 spring 컨테이너로부터 객체 라이프 사이클 관리 받음
	개발자가 인스턴스화 하는 것과는 차이가 있다.
	 -->
	 <!-- 
	 스프링에서 제공하는 객체 주입법에는 생성자 객체 주입법과 setter 객체 주입법이 존재한다.
	 setter 객체 주입법은 자바코드로 진행되므로 같은 언어끼리 사용할 때 주로 사용하고
	 생성자 객체 주입법은 xml문서에 설정하므로 이종간 주로 사용한다.
	 예) myBatis와 스프링 비벼보기
	  -->
	<bean id="myCar" class="com.di.Sonata" />
	<bean id="himCar" class="com.di.Sonata" scope="singleton">
		<constructor-arg index="0" type="java.lang.String" value="흰색"/>
		<constructor-arg index="1" type="int" value="50"/>
	</bean>
	<!-- 인덱스는 생성자 파라미터 순서와 일치시켜야 함  -->
	<bean id="herCar" class="com.di.Sonata" scope="singleton">
		<constructor-arg index="0" type="java.lang.String" value="검정색"/>
		<constructor-arg index="1" type="int" value="100"/>
		<constructor-arg index="2" type="int" value="4"/>
	</bean>
</beans>