<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
	<!--
	bean태그는 class를 의미함
	id는 인스턴스변수로 생각하기
	bean태그의 아이디는 다른 bean태그의 ref자리에 사용됨
	해당 빈이 다른 빈의 의존관계에 있다
	 -->
	
	<bean id="data-source-target" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@127.0.0.1:1521:orcl11</value>
		</property>
		<property name="username">
			<value>scott</value>
		</property>
		<property name="password">
			<value>tiger</value>
		</property>
	</bean>
    <!-- Transaction manager for a single JDBC DataSource -->
    <!-- 스프링에서는 클래스를 선언할 때 bean태그를 사용함
    bean 태그의 id 값은 다른 클래스와의 관계에서 참조되어야 하는 경우 ref 속성값으로 사용 됨
    즉 의존관계에 놓여 있는 경우에 사용 됨
    만일 스프링을 사용하지 않을 때는 SqlSessionFactory를 사용함
	myBatis-spring.jar : 스프링 f/w에 사용하는 것은 myBatis가 필요한 클래스를 지원해야 하니까.
    myBatis에서 물리적으로 떨어져 있는 오라클 서버에 연결통로를 생성하는 클래스 SqlSessionFactoryBean임 
    xml과 xml문서 사이에서도 의존성 주입이 가능하다 - 관찰해보기 
    -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="data-source-target"/>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="WEB-INF/mybatis-config.xml"/>
		<property name="dataSource" ref="data-source-target"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>		
	<bean id="dept-dao" class="com.erp.DeptDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>		
</beans>