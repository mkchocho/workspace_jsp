/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-18 03:15:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;

public final class memberList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/include/gym_footer.jsp", Long.valueOf(1684303334210L));
    _jspx_dependants.put("/include/gym_header.jsp", Long.valueOf(1684291478613L));
    _jspx_dependants.put("/common/bootstrap_common.jsp", Long.valueOf(1684295047261L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("        \r\n");

    //스크립틀릿 - 지변, 메소드선언 불가함, 인스턴스화 가능함
    int size = 0;//지변이니까 초기화를 생략하면 에러발생함.
    List<Map<String,Object>> mList = (List<Map<String,Object>>)request.getAttribute("mList");
    out.print(size);//0이 출력됨
    out.print(mList);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원관리</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write(" <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\r\n");
      out.write(" 	<!--\r\n");
      out.write(" 	https://getbootstrap.com/docs/5.2/getting-started/download/\r\n");
      out.write(" 	 위 사이트에서 CDN via jsDelivr 하단 2줄 코드 복붙 \r\n");
      out.write(" 	 -->\r\n");
      out.write(" <script src=\"https://kit.fontawesome.com/cc13ae136b.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write(" 	<!-- fontawesome 로그인해서 고유코드 조회할 때 밑에 생성해준 코드 복붙 -->\r\n");
      out.write(" \r\n");
      out.write("<!-- \r\n");
      out.write("	css나 js파일명에 min이 있는 것과 없는 것 차이점\r\n");
      out.write("	통상 js도 보안적인 이슈 때문에 소스를 분리해서 관리 배포 하게 되었다.\r\n");
      out.write("	실제 페이지가 렌더링 되기 전에 다운로드가 된 후에 실행이 되는 구조를 갖는다\r\n");
      out.write("	여백, 공백, 들여쓰기 등이 포함되면 파일의 크기가 더 커진다\r\n");
      out.write("	여백, 공백, 들여쓰기 등을 다 생략하고 바짝 붙여서 코드가 작성된 버전이다.\r\n");
      out.write("	정적 페이지 처리 주체 - 브라우저 - 다운로드해서 가지고 있어야 함\r\n");
      out.write(" --> \r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/member.css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    const handleShow = () => {\r\n");
      out.write("       \r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- header start -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg bg-light\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"#\">TerrGYM</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">자유게시판</a>\r\n");
      out.write("        </li>\r\n");
      out.write("           <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">QnA게시판</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">요가</a>\r\n");
      out.write("        </li>\r\n");
      out.write("  		<li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">PT</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("    <!-- header end    -->\r\n");
      out.write("    <!-- body start    -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("       <div class=\"page-header\">\r\n");
      out.write("          <h2>회원관리 <small>회원목록</small></h2>\r\n");
      out.write("          <hr />\r\n");
      out.write("       </div>\r\n");
      out.write("       <!-- 검색기 시작 -->\r\n");
      out.write("       <div class=\"row\">\r\n");
      out.write("          <div class=\"col-3\">\r\n");
      out.write("              <select id=\"gubun\" class=\"form-select\" aria-label=\"분류선택\">\r\n");
      out.write("                 <option defaultValue>분류선택</option>\r\n");
      out.write("                 <option value=\"mem_id\">아이디</option>\r\n");
      out.write("                 <option value=\"mem_name\">이름</option>\r\n");
      out.write("                 <option value=\"mem_address\">주소</option>\r\n");
      out.write("              </select>        \r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-6\">\r\n");
      out.write("             <input type=\"text\" id=\"keyword\" class=\"form-control\" placeholder=\"검색어를 입력하세요\" \r\n");
      out.write("                  aria-label=\"검색어를 입력하세요\" aria-describedby=\"btn_search\" />\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-3\">\r\n");
      out.write("             <button id=\"btn_search\" class=\"btn btn-danger\" onClick=\"memberSearch()\">검색</button>\r\n");
      out.write("          </div>\r\n");
      out.write("       </div>    \r\n");
      out.write("       <!-- 검색기 끝 -->\r\n");
      out.write("       \r\n");
      out.write("       <!-- 회원목록 시작 -->\r\n");
      out.write("       <div class='member-list'>\r\n");
      out.write("          <table class=\"table table-hover\">\r\n");
      out.write("              <thead>\r\n");
      out.write("                 <tr>\r\n");
      out.write("                     <th>#</th>\r\n");
      out.write("                     <th>아이디</th>\r\n");
      out.write("                     <th>이름</th>\r\n");
      out.write("                     <th>주소</th>\r\n");
      out.write("                 </tr>\r\n");
      out.write("              </thead>\r\n");
      out.write("              <tbody>\r\n");
      out.write("                 <tr>\r\n");
      out.write("                     <th>1</th>\r\n");
      out.write("                     <th>tomato</th>\r\n");
      out.write("                     <th>토마토</th>\r\n");
      out.write("                     <th>서울 금천구 가산동</th>\r\n");
      out.write("                 </tr>\r\n");
      out.write("              </tbody>\r\n");
      out.write("          </table> \r\n");
      out.write("          <hr />    \r\n");
      out.write("          <div class='member-footer'>\r\n");
      out.write("              <button class=\"btn btn-warning\" onclick=\"boardList()\">\r\n");
      out.write("                 전체조회\r\n");
      out.write("              </button>&nbsp; \r\n");
      out.write("              <button type=\"button\" class=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#memberForm\">\r\n");
      out.write("              글쓰기\r\n");
      out.write("              </button>\r\n");
      out.write("           </div>\r\n");
      out.write("       </div>    \r\n");
      out.write("       <!-- 회원목록   끝  -->    \r\n");
      out.write("       \r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- body end       -->\r\n");
      out.write("    <!-- footer start -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("  <div class=\"navbar navbar-expand-sm  bg-dark justify-content-center\">\r\n");
      out.write("    <a class=\"navbar-brand\"  style=\"color:white\" href=\"#\">TerrGYM Copyright&copy;2023</a>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- footer end    --> \r\n");
      out.write("    <!-- ========================== [[ 회원가입 Modal ]] ========================== -->\r\n");
      out.write("    <div class=\"modal\" id=\"memberForm\">\r\n");
      out.write("      <div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("    \r\n");
      out.write("          <!-- Modal Header -->\r\n");
      out.write("          <div class=\"modal-header\">\r\n");
      out.write("            <h4 class=\"modal-title\">회원가입</h4>\r\n");
      out.write("            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("          </div>\r\n");
      out.write("    \r\n");
      out.write("          <!-- Modal body -->\r\n");
      out.write("          <div class=\"modal-body\">\r\n");
      out.write("           <form id=\"f_member\">\r\n");
      out.write("              <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("                <input type=\"text\"  class=\"form-control\" id=\"mem_id\" name=\"mem_id\" placeholder=\"Enter 아이디\" />\r\n");
      out.write("                <label for=\"mem_id\">아이디</label>\r\n");
      out.write("              </div>          \r\n");
      out.write("              <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("                <input type=\"text\"  class=\"form-control\" id=\"mem_pw\" name=\"mem_pw\" placeholder=\"Enter 비밀번호\" />\r\n");
      out.write("                <label for=\"mem_pw\">비밀번호</label>\r\n");
      out.write("              </div>          \r\n");
      out.write("              <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("                <input type=\"text\"  class=\"form-control\" id=\"mem_name\" name=\"mem_name\" placeholder=\"Enter 이름\" />\r\n");
      out.write("                <label for=\"mem_name\">이름</label>\r\n");
      out.write("              </div>          \r\n");
      out.write("           </form>\r\n");
      out.write("          </div>\r\n");
      out.write("    \r\n");
      out.write("          <!-- Modal footer -->\r\n");
      out.write("          <div class=\"modal-footer\">\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\">Add</button>\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("          </div>\r\n");
      out.write("    \r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- ========================== [[ 회원가입 Modal ]] ========================== -->    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
