*응답
forward 부분에서 확장


						오라클서버
ㅁ			ㅁ			ㅇ
memerlist.jsp		MemberServlet		DB
이 페이지에서만 응답에 대한 출력을 하는지
			 서블릿을 경유하는지
		+jsp와 서블릿 사이에 대한 유지의 문제

		유지하면 떠올려야할 것 → Scope

*scope에는 4가지가 있음

1.page(page context)
그 페이지에서만 유지가 된다
└→4번과 함께 1번도 잊어도 됨
모바일 특성 상 화면이 계속 바뀜(안드로이드 쪽에서 activate)

2.request ★ 								┐
그냥 자바랑 다른 점  							│
자바에는 scope가 없었는데 web에 오면 scope에 대해서 생각해야함		│
									│
3.session ★								│
변수의 완결편이라고 이야기 했던 쿠키와 세션 중 세션			┘★스프링에서도 2가지만 지원함

4.application
서버를 끄기 전까지 죽지 않음
서버입장에서 부담스러움
초당 3~4천명도 들어올 수 있음 ┐
인스턴스화가 기하급수적으로 늘어나면 서버가 다운되기 때문에 잊어도 됨


오늘은 2번에 대해서 집중적으로 배움 아래와 관계있음
[sendRedirect]
(요청)→ㅁ(a.jsp)→ㅁ(b.jsp)
	1.
	2.
	3.
	redirect (url 변경됨)		url:위치 → 톰캣이 가리키는 물리적인 위치 (D드라이브\workspace_jsp)
	4.(redirect로 인해서 실행되지 못함)		url을 강조하는 이유 pojo 1-1, 1-2, 1-3 순차적으로 수업 → 스프링

[forward(유지)]
자바-재사용성
a.jsp가 갖고 있는 것을 b.jsp에서도 사용하게 하려면
└→ 잘 몰라도 forward를 사용할 것
(※redirect와 다르게 url 변경X)

jsp - jsp (X)
Servlet - jsp (◎)
서블릿 뒤에는 자바 자바 뒤에는 오라클(DB)이 있음