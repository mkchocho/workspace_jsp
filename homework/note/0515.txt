*로컬과 web의 차이점 

*web이라고하면 기본적으로 생각해야할 점 → 네트워크

	*로컬
	자바를 처음 공부했을 때 만났던 것 : main
	main은 계속 필요한 것인가 ? 아님
	로컬에서 동작을한다는 것 → 실행파일(.exe)로 만들어지는 것

└web - URL(위치의 문제 : 컴파일을 어디에 작성할 것인가, 알고리즘)
위치는 어떤 일을 하는 순서, 논리적 사고 - 순서대로 위치를 정할 수 있는

더 많은 사람과 소통하기 위해서 main은 더 사용하지 않음
(쓰지 않는다고 해서 객체가 후지다거나 부정하는 것은 아님)

네트워크 안에서 소통을 하려면 필요한 것 '프로토콜'

http/https(security:보안→인증서를 가지고 있는 경우에만 사용할 수 있음)
프로토콜이 가지고 있는 특징
그중 한가지 : 상태가 유지되지 않음
의미 : 데이터, 상태가 변함 / 상태데 대한 관리가 중요함 - 코드를 통해서 관리
상태를 유지하는 게 중요함, 상태가 끊김? 연습할 때 상태가 끊어지는 것을 유지할 수 있도록 해야함

http프로토콜의 단점 : 뚝뚝 끊어짐 → 유지해야함 → 필요한 것 : API = 쿠키와 세션
쿠키와 세션을 다루기 위해서 변수를 배우는 것임
(가장 앞부분 변수선언을 배우는 이유)

[로그인상황을 예를들어]
로그인 화면(Veiw) id, pw (html의 영역)
	↓
사용자가 (로그인)요청 : URL을 사용 (후에 MVC를 공부)
	↓
로그인 요청할 때 사용되는 '브라우저' (브라우저의 역할 : 인터프리터)
(브라우저(.exe) 에서 사용되는 확장자(html) 
마킹? 브라우저에서 열린 태그와 태그로 마킹, CSS, JavaScript) 웹서비스를 구현하는데 기본으로 하는 3가지
└→그 다음 단계 .jsp (섞어쓰기) 예쁜 화면으로 구현하기 위해서 
특징 : 정적이다
	
--------유저인터페이스-----------
	사용자 화면에 보이는 단계
(MVC 패턴에서는 View계층이라고 말함)

	↓
주입을 받아야함, 스프링에서 나오는 부분 객체 주입
Tomcat이라는 WAS(Web Application Server)에
-전송 : 사용자의 id, pw
-단위테스트 위해 설치한 툴 : postman

			(선생님연설시간 : 코딩보다 생각이 먼저, 생각다음에 말하기연습하라함)

(resouerce)등을 전송하기 위해 
get, post ,???(수정), delete(삭제) → "restful api"
브라우저의 지원 상 get과 post만 주로 사용함

정적페이지 html css js
동적 jsp, servlet 으로 관리

reseource 전송을 위해 사용하는 4가지 restful api - get, post, ?(뭔글자야), delete
